{
  "id": 10,
  "title": "真偽の灯",
  "icon": "10",
  "summary": "true/false と条件分岐の基本",
  "story": [
    "ブール値は true/false の二択。条件分岐(if)のスイッチになる。",
    "条件は比較や論理で作る: a > b, x === y, isReady && hasStock のように。",
    "分岐は else if / else で整理し、早期returnやガード節でネストを浅くすると読みやすい。",
    "条件は一つの意図を短く書く。否定の重ね書き(!a || !b)より、肯定形の関数名(isAvailable)が伝わりやすい。",
    "フラグを増やしすぎるより、状態は列挙型(例: \"draft\", \"ready\", \"shipped\")で表すのも有効。",
    "テストでは境界(=, >, >=)や null/undefined/空文字の扱いを忘れない。実務の事故を減らせる。"
  ],
  "poem": {"title": "灯の短歌","lines": ["もしならば","分かつ路こそ","生きやすく","真偽の灯で","迷い晴らさん"]},
  "keyPoints": [
    { "term": "真偽値", "definition": "true/false の二値。条件の結果を表す" },
    { "term": "条件分岐", "definition": "条件に応じて処理の道筋を変える仕組み" }
  ]
}
