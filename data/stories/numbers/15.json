{
  "id": 15,
  "title": "誓いのデータ",
  "icon": "15",
  "summary": "振り返りと次章への架け橋",
  "story": [
    "この章で学んだCSの核を振り返る。",
    "・0/1の最小単位(ビット)と束(バイト)。『何ビット/何バイトで表すか』は設計の出発点。",
    "・型の選び方(整数/小数/文字列/真偽)。用途に合う型でミスとコストを減らす。",
    "・十進/二進/十六進。見た目は違っても同じ値—基数を明示して誤解を防ぐ。",
    "・文字コード(ASCII/Unicode)とUTF-8。『同じ表で往復する』ことで文字化けを避ける。",
    "・桁の限界と2の補数、オーバーフロー対策(幅の選択/範囲チェック/任意精度)。",
    "・小数誤差の扱い(丸め/許容誤差/整数やDecimalの活用)。",
    "・単位(kB/KiB, B/b, 速度換算)は最初に決めて統一。",
    "・時刻は『保存=UTCの数、通信=ISO 8601、表示=ローカル』で混乱を防ぐ。",
    "・真偽と条件分岐は簡潔に。ガード節・列挙型で読みやすく。",
    "・配列とMapを使い分け、JSONで構造を共有する。",
    "・圧縮(Gzip/Brotli 等)で小さく速くし、検証はチェックサム/ハッシュで。",
    "学んだ道具で日常を整えると、情報は遠くへ確かに届く。これは恋の話でも、システム設計でも同じ。",
    "次章は『ハードウェア(身体)』。データを運ぶ基盤—CPU/メモリ/ストレージ/バス—に踏み込む。"
  ],
  "poem": {"title": "誓いの短歌","lines": ["零と一","積み重ねきて","今日という","誓いの印","結びてほどけず"]},
  "keyPoints": [
    { "term": "振り返り", "definition": "ビット/バイト、型、進数、文字コード、時間、配列/連想、JSON、圧縮、チェックサムの要点を復習する" },
    { "term": "次章予告", "definition": "ハードウェア—計算機の身体へ" }
  ]
}
