{
  "id": 6,
  "title": "桁の限界",
  "icon": "06",
  "summary": "オーバーフローの罠—範囲と符号",
  "story": [
    "整数は限られたビット数で保存する。はみ出すと別の値に回り込む—これがオーバーフロー。",
    "8ビットの例: 符号なしは 0〜255、符号ありは -128〜127。符号ありは『2の補数』方式で負の数を表す。",
    "境界での 127+1 → -128 などはバグの温床。計測や在庫で致命的なズレを生む。",
    "対策: 入力の範囲チェック、十分な桁幅(16/32/64ビット)の選択、必要なら任意精度(例: BigInt/多倍長)。",
    "UIやDBでも『桁数・最小最大』を設定しておくと、不正な値がそもそも入らない。",
    "器の大きさを最初に設計する—安全なデータ処理の基本。"
  ],
  "poem": {"title": "器の短歌","lines": ["溢る前","器を量り","取り替えて","真実守る","数の懐"]},
  "keyPoints": [
    { "term": "オーバーフロー", "definition": "表現範囲を超えて値が回り込む現象" },
    { "term": "符号あり/なし", "definition": "負の数を扱うかどうかの違いで範囲が変わる" }
  ]
}
